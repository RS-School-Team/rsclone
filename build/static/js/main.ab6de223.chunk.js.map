{"version":3,"sources":["assets/path.js","slices/listsSlice.js","components/CreateList.jsx","components/EditListTitle.jsx","components/DeleteListDialog.jsx","elements/spinner/spinner.jsx","slices/appSlice.js","components/SignInForm.jsx","components/Students.jsx","components/SignUpForm.jsx","components/Task.jsx","components/CreateNewTask.jsx","components/EditTask.jsx","slices/tasksSlice.js","components/Projects.jsx","components/Tasks.jsx","components/MainContent/Router/SwtchRouter.jsx","components/MainContent/MainContent.jsx","components/SideBar.jsx","components/Header.jsx","App.js","slices/headerSlice.js","slices/userSlice.js","slices/store.js","serviceWorker.js","index.js"],"names":["path","addList","createAsyncThunk","a","project","token","fetch","method","body","JSON","stringify","headers","Authorization","redirect","response","json","list","console","log","fetchLists","data","deleteList","id","editList","title","name","addTask","task","newTask","editTask","description","deleteTask","listId","Number","listSlice","createSlice","initialState","lists","isCreateListOpen","isEditListOpen","editingList","status","error","isDeleteListOpen","deletingList","isDeleteTaskOpen","deletingTask","reducers","localList","state","action","payload","createListOpen","createListClose","editListOpen","editListClose","createNewList","push","deleteListOpen","deleteListClose","deleteTaskOpen","deleteTaskClose","extraReducers","pending","fulfilled","rejected","newLists","filter","_id","map","tasks","actions","CreateList","isOpen","useSelector","app","dispatch","useDispatch","useState","setTitle","user","Dialog","open","onClose","aria-labelledby","fullWidth","align","DialogTitle","DialogContent","DialogContentText","noValidate","autoComplete","TextField","trim","length","helperText","autoFocus","margin","label","type","onChange","e","target","value","DialogActions","Button","color","onClick","managerID","disabled","EditListTitle","placeholder","DeleteListDialog","area-labelledby","aria-describedby","handleDelete","LoadingSpinner","className","initialUser","firstName","lastName","manager","email","isMenuOpen","isLogin","addUser","form","localStorage","setItem","sessionStorage","loginUser","loginLocalUser","newUser","appSlice","openMenu","closeMenu","finishLoading","logOut","removeItem","localLogin","Copyright","Typography","variant","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","width","submit","SignIn","classes","history","useHistory","fetchStatus","values","setValues","handleChange","event","persist","Container","component","maxWidth","CssBaseline","onSubmit","preventDefault","formData","password","required","FormControlLabel","control","Checkbox","Grid","container","item","xs","Box","mt","Students","Fragment","FormControl","style","minWidth","Select","displayEmpty","inputProps","MenuItem","Table","TableHead","TableRow","TableCell","SignUpForm","isTeacher","role","sm","RadioGroup","row","Radio","labelPlacement","justify","Task","useRouteMatch","url","params","isAdmin","match","taskId","activeList","find","elem","to","size","startIcon","marginBottom","fontSize","marginLeft","CreateNewTask","setDescription","handleClose","replace","marginRight","gutterBottom","multiline","rows","EditTask","defaultValue","InputLabelProps","shrink","tasksSlice","tasksLoaded","root","height","borderRadius","addCard","justifyContent","addCardBtn","messageBtn","Projects","useEffect","Card","CardContent","fontWeight","CardActions","disableSpacing","IconButton","aria-label","Tasks","SwitchRouter","exact","SignInForm","drawerHeader","padding","mixins","toolbar","content","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","MainContent","parse","getItem","hasToken","loginStatus","p","overflow","clsx","Sidebar","Drawer","anchor","Divider","List","ListItem","button","appBar","appBarShift","menuButton","hide","Header","greetingText","AppBar","position","Toolbar","edge","pr","App","headerSlice","openLogin","closeLogin","userSlice","configureStore","reducer","taskReducer","listsReducer","appReducer","header","headerReducer","userReducer","Boolean","window","location","hostname","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab6de223.chunk.js","sourcesContent":["export const path = 'https://rss-team-rsclone.herokuapp.com/api'","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { path } from '../assets/path';\n\nconst initialState = {\n  lists: [],\n  isCreateListOpen: false,\n  isEditListOpen: false,\n  editingList: {},\n  status: 'idle',\n  error: null,\n  isDeleteListOpen: false,\n  deletingList: {},\n  isDeleteTaskOpen: false,\n  deletingTask: {},\n};\n\nexport const addList = createAsyncThunk(\n  'lists/addList',\n  async ([project, token]) => {\n    const response = await fetch(`${path}/project`, {\n      method: 'POST',\n      body: JSON.stringify(project),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      redirect: 'follow',\n    });\n    const list = await response.json();\n    console.log(list);\n    return list;\n  }\n);\n\nexport const fetchLists = createAsyncThunk(\n  'lists/fetchLists',\n  async ([token, id]) => {\n    const response = await fetch(`${path}/project`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n    });\n    const data = await response.json();\n    return data;\n  }\n);\n\nexport const deleteList = createAsyncThunk(\n  'lists/deleteLists',\n  async ([id, token]) => {\n    const response = await fetch(`${path}/project/${id}`, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n    });\n    return id;\n  }\n);\n\nexport const editList = createAsyncThunk(\n  'lists/editLists',\n  async ([{ title, id }, token]) => {\n    const response = await fetch(`${path}/project/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify({\n        name: title,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return { title, id };\n  }\n);\nexport const addTask = createAsyncThunk('lists/addTask', async (task) => {\n  const response = await fetch('http://localhost:3005/tasks', {\n    method: 'POST',\n    body: JSON.stringify(task),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const newTask = await response.json();\n  return newTask;\n});\n\nexport const editTask = createAsyncThunk(\n  'lists/editTask',\n  async ({ id, title, description }) => {\n    const response = await fetch('http://localhost:3005/tasks/' + id, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        title: title,\n        description: description,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const newTask = await response.json();\n    return newTask;\n  }\n);\nexport const deleteTask = createAsyncThunk(\n  'lists/deleteTask',\n  async ({ id, listId }) => {\n    const response = await fetch('http://localhost:3005/tasks/' + Number(id), {\n      method: 'DELETE',\n    });\n    return { id, listId };\n  }\n);\nconst listSlice = createSlice({\n  name: 'lists',\n  initialState,\n  reducers: {\n    localList(state, action) {\n      state.lists = action.payload;\n    },\n    createListOpen(state, action) {\n      state.isCreateListOpen = true;\n    },\n    createListClose(state, action) {\n      state.isCreateListOpen = false;\n    },\n    editListOpen(state, action) {\n      state.isEditListOpen = true;\n      state.editingList = action.payload;\n    },\n    editListClose(state, action) {\n      state.isEditListOpen = false;\n    },\n    createNewList(state, action) {\n      state.lists.push(action.payload);\n    },\n    deleteListOpen(state, action) {\n      state.isDeleteListOpen = true;\n      state.deletingList = action.payload;\n    },\n    deleteListClose(state, action) {\n      state.isDeleteListOpen = false;\n    },\n    deleteTaskOpen(state, action) {\n      state.isDeleteTaskOpen = true;\n      state.deletingTask = action.payload;\n    },\n    deleteTaskClose(state, action) {\n      state.isDeleteTaskOpen = false;\n    },\n  },\n  extraReducers: {\n    [fetchLists.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchLists.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.lists = action.payload;\n    },\n    [fetchLists.rejected]: (state, action) => {\n      state.status = 'failed';\n      console.log(action.payload);\n      state.error = action.payload;\n    },\n    [deleteList.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [deleteList.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      const id = action.payload;\n      const newLists = state.lists.filter((list) => list._id !== id);\n      state.lists = [...newLists];\n    },\n    [deleteList.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [editList.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [editList.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      const { title, id } = action.payload;\n      const newLists = state.lists.map((list) => {\n        if (list._id === id) {\n          list.name = title;\n        }\n        return list;\n      });\n      state.lists = newLists;\n    },\n    [editList.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [addList.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [addList.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.lists.push(action.payload);\n    },\n    [addList.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [addTask.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [addTask.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      const task = action.payload;\n      const newLists = state.lists.map((list) => {\n        if (list.id === task.id) {\n          list.tasks.push(task);\n        }\n        return list;\n      });\n      state.lists = newLists;\n    },\n    [addTask.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [editTask.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [editTask.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      const newTask = action.payload;\n      const newLists = state.lists.map((list) => {\n        if (list.id === newTask.listId) {\n          list.tasks.map((task) => {\n            if (task.id === newTask.id) {\n              task.title = newTask.title;\n              task.description = newTask.description;\n            }\n            return task;\n          });\n        }\n        return list;\n      });\n      state.lists = newLists;\n    },\n    [editTask.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [deleteTask.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [deleteTask.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      const { id, listId } = action.payload;\n      const newLists = state.lists.map((list) => {\n        if (Number(listId) === list.id) {\n          const tasks = list.tasks.filter((task) => task.id !== Number(id));\n          list.tasks = tasks;\n        }\n        return list;\n      });\n      state.lists = newLists;\n    },\n    [deleteTask.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  createListOpen,\n  createListClose,\n  editListOpen,\n  editListClose,\n  createNewList,\n  deleteListClose,\n  deleteListOpen,\n  deleteTaskOpen,\n  deleteTaskClose,\n  localList,\n} = listSlice.actions;\n\nexport default listSlice.reducer;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addList, createListClose } from '../slices/listsSlice';\n\nconst CreateList = () => {\n  const isOpen = useSelector((state) => state.lists.isCreateListOpen);\n  const token = useSelector((state) => state.app.token);\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState('');\n  const { _id } = useSelector((state) => state.app.user);\n  const handleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  const onSaveListClicked = () => {\n    if (title.trim()) {\n      setTitle('');\n      dispatch(addList([{ name: title.trim(), managerID: _id }, token]));\n      dispatch(createListClose());\n    }\n  };\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={() => dispatch(createListClose())}\n      aria-labelledby=\"form-dialog-title\"\n      fullWidth\n      align=\"center\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Create new project</DialogTitle>\n      <DialogContent>\n        <DialogContentText>Enter project title</DialogContentText>\n        <form noValidate autoComplete=\"off\">\n          <TextField\n            error={title.trim().length < 4}\n            helperText=\"Title length must be more than 3 characters\"\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Project title\"\n            type=\"text\"\n            fullWidth\n            onChange={handleChange}\n          />\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"primary\"\n          onClick={onSaveListClicked}\n          disabled={title.trim().length < 4}\n        >\n          Save\n        </Button>\n        <Button color=\"secondary\" onClick={() => dispatch(createListClose())}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default CreateList;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editList, editListClose } from '../slices/listsSlice';\n\nconst EditListTitle = () => {\n  const isOpen = useSelector((state) => state.lists.isEditListOpen);\n  const token = useSelector((state) => state.app.token);\n  const dispatch = useDispatch();\n  let [title, setTitle] = useState('');\n  const editingList = useSelector((state) => state.lists.editingList);\n\n  const handleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  const onSaveListClicked = () => {\n    if (title.trim()) {\n      setTitle('');\n      dispatch(editList([{ title: title.trim(), id: editingList._id }, token]));\n      dispatch(editListClose());\n    }\n  };\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={() => dispatch(editListClose())}\n      aria-labelledby=\"form-dialog-title\"\n      fullWidth\n      align=\"center\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Edit project title</DialogTitle>\n      <DialogContent>\n        <form noValidate autoComplete=\"off\">\n          <TextField\n            error={title.trim().length < 4}\n            helperText=\"Title length must be more than 3 characters\"\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label={`New project's title`}\n            type=\"text\"\n            fullWidth\n            onChange={handleChange}\n            placeholder={editingList.name}\n          />\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"primary\"\n          onClick={onSaveListClicked}\n          disabled={title.trim().length < 4}\n        >\n          Save\n        </Button>\n        <Button color=\"secondary\" onClick={() => dispatch(editListClose())}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EditListTitle;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from '@material-ui/core';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteList, deleteListClose } from '../slices/listsSlice';\n\nconst DeleteListDialog = () => {\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.app.token);\n  const isOpen = useSelector((state) => state.lists.isDeleteListOpen);\n  const lists = useSelector((state) => state.lists.lists);\n  const { _id: id, name } = useSelector((state) => state.lists.deletingList);\n  const handleDelete = (id) => {\n    dispatch(deleteListClose());\n    dispatch(deleteList([id, token]));\n  };\n  return (\n    <Dialog\n      open={isOpen}\n      area-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      fullWidth\n      onClose={() => dispatch(deleteListClose())}\n    >\n      <DialogTitle id=\"alert-dialog-title\">{`Delete list ${name}?`}</DialogTitle>\n      <DialogContent id=\"alert-dialog-content\">\n        You will not be able to use this list anymore\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"secondary\" onClick={() => handleDelete(id, lists)}>\n          Delete\n        </Button>\n        <Button\n          color=\"primary\"\n          autoFocus\n          onClick={() => dispatch(deleteListClose())}\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DeleteListDialog;\n","import React from 'react';\nimport './spinner.css';\n\nconst LoadingSpinner = () => {\n  return (\n    <div className=\"loader__container\">\n      <div className=\"loader\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { path } from '../assets/path';\n\nconst initialUser = {\n  name: {\n    firstName: '',\n    lastName: '',\n  },\n  manager: null,\n  email: null,\n  _id: null,\n  project: [],\n};\n\nconst initialState = {\n  isMenuOpen: false,\n  status: 'idle',\n  error: null,\n  isLogin: false,\n  user: initialUser,\n  token: '',\n};\n\nexport const addUser = createAsyncThunk('app/addUser', async (form) => {\n  const response = await fetch(`${path}/auth/register`, {\n    method: 'POST',\n    body: JSON.stringify(form),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    redirect: 'follow',\n  });\n  const user = await response.json();\n  localStorage.setItem('user', JSON.stringify(user));\n  sessionStorage.setItem('user', JSON.stringify(user));\n\n  return user;\n});\n\nexport const loginUser = createAsyncThunk('app/loginUser', async (form) => {\n  const response = await fetch(`${path}/auth/login`, {\n    method: 'POST',\n    body: JSON.stringify(form),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    redirect: 'follow',\n  });\n  const user = await response.json();\n  console.log(user);\n  localStorage.setItem('user', JSON.stringify(user));\n  sessionStorage.setItem('user', JSON.stringify(user));\n  return user;\n});\n\nexport const loginLocalUser = createAsyncThunk(\n  'app/loginUser',\n  async (token) => {\n    const response = await fetch(`${path}/users/my`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      redirect: 'follow',\n    });\n    const newUser = await response.json();\n    const user = {\n      user: newUser,\n      token: token,\n    };\n    localStorage.setItem('user', JSON.stringify(user));\n    sessionStorage.setItem('user', JSON.stringify(user));\n    return user;\n  }\n);\n\nconst appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    openMenu(state, action) {\n      state.isMenuOpen = true;\n    },\n    closeMenu(state, action) {\n      state.isMenuOpen = false;\n    },\n    finishLoading(state, action) {\n      state.status = 'idle';\n    },\n    logOut(state, action) {\n      state.user = initialUser;\n      state.isLogin = false;\n      state.token = '';\n      localStorage.removeItem('user');\n      sessionStorage.removeItem('user');\n    },\n    localLogin(state, action) {\n      state.user = action.payload;\n      state.isLogin = true;\n    },\n  },\n  extraReducers: {\n    [addUser.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [addUser.fulfilled]: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.status = 'succeeded';\n    },\n    [addUser.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [loginUser.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [loginUser.fulfilled]: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLogin = true;\n      state.status = 'succeeded';\n    },\n    [loginUser.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  openMenu,\n  closeMenu,\n  finishLoading,\n  logOut,\n  localLogin,\n} = appSlice.actions;\n\nexport default appSlice.reducer;\n","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { finishLoading, loginUser } from '../slices/appSlice';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const fetchStatus = useSelector((state) => state.app.status);\r\n  const dispatch = useDispatch();\r\n  const [values, setValues] = useState({});\r\n\r\n  function goToSignUp(e) {\r\n    e.preventDefault(e);\r\n    history.push('/signUp');\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = {\r\n      email: e.target.email.value,\r\n      password: e.target.password.value,\r\n    };\r\n    dispatch(loginUser(formData));\r\n  };\r\n  if (fetchStatus === 'succeeded' || fetchStatus === 'failed') {\r\n    dispatch(finishLoading());\r\n\r\n    history.push('/all_projects');\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={handleChange}\r\n            value={values.email || ''}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handleChange}\r\n            value={values.password || ''}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" onClick={goToSignUp} variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport {\n  MenuItem,\n  Select,\n  Table,\n  TableCell,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\n\nconst Students = () => {\n  return (\n    <React.Fragment>\n      <FormControl\n        variant=\"outlined\"\n        style={{\n          minWidth: 150,\n        }}\n      >\n        <Select\n          // value={age}\n          // onChange={handleChange}\n          displayEmpty\n          inputProps={{ 'aria-label': 'Without label' }}\n        >\n          <MenuItem value={0}>Your students</MenuItem>\n          <MenuItem value={1}>New requests</MenuItem>\n          <MenuItem value={2}>Declined requests</MenuItem>\n          <MenuItem value={3}>Archive</MenuItem>\n        </Select>\n      </FormControl>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Student's name</TableCell>\n            <TableCell>Tasks done</TableCell>\n            <TableCell>Status</TableCell>\n          </TableRow>\n        </TableHead>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nexport default Students;\n","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addUser, finishLoading } from '../slices/appSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst SignUpForm = () => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [values, setValues] = useState({});\r\n  const fetchStatus = useSelector((state) => state.app.status);\r\n\r\n  function goToSignIn(e) {\r\n    e.preventDefault();\r\n    history.push('/signIn');\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let isTeacher = e.target.role.value === 'teacher';\r\n    const formData = {\r\n      name: {\r\n        firstName: e.target.firstName.value,\r\n        lastName: e.target.lastName.value,\r\n      },\r\n      email: e.target.email.value,\r\n      password: e.target.password.value,\r\n      manager: isTeacher,\r\n    };\r\n    dispatch(addUser(formData));\r\n  };\r\n\r\n  if (fetchStatus === 'succeeded' || fetchStatus === 'failed') {\r\n    dispatch(finishLoading());\r\n    history.push('/all_projects');\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={handleChange}\r\n                value={values.firstName || ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                onChange={handleChange}\r\n                value={values.lastName || ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                type=\"email\"\r\n                onChange={handleChange}\r\n                value={values.email || ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange}\r\n                value={values.password || ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <RadioGroup row>\r\n                <FormControlLabel\r\n                  name=\"role\"\r\n                  value=\"teacher\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Teacher\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                  name=\"role\"\r\n                  value=\"student\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Student\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </RadioGroup>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#\" onClick={goToSignIn} variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import { Button, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouteMatch } from 'react-router';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { deleteTaskOpen } from '../slices/listsSlice';\n\nconst Task = () => {\n  const { url, params } = useRouteMatch();\n  const isAdmin = useSelector((state) => state.app.isAdmin);\n  const dispatch = useDispatch();\n  const [listId] = url.match(/(?<=project\\/)([\\S]+?)(?=\\/)/);\n  const taskId = Number(params.id);\n  let activeList = useSelector((state) => {\n    return state.lists.lists.find((elem) => {\n      return elem.id === Number(listId);\n    });\n  });\n  let task;\n  if (activeList) {\n    task = activeList.tasks.find((task) => task.id === taskId);\n  }\n  return (\n    <React.Fragment>\n      {isAdmin && (\n        <React.Fragment>\n          <RouteLink to={`${url}/edit`}>\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              color=\"primary\"\n              style={{ margin: 8 }}\n              startIcon={<EditIcon />}\n            >\n              Edit\n            </Button>\n          </RouteLink>\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            color=\"secondary\"\n            style={{ margin: 8 }}\n            startIcon={<DeleteIcon />}\n            onClick={() => dispatch(deleteTaskOpen(task))}\n          >\n            Delete\n          </Button>\n        </React.Fragment>\n      )}\n\n      <Typography\n        variant=\"h4\"\n        align=\"center\"\n        style={{ marginTop: 20, marginBottom: 50 }}\n      >\n        {task && task.title}\n      </Typography>\n      <Typography\n        variant=\"body1\"\n        style={{\n          fontSize: '1.5rem',\n          marginLeft: 10,\n        }}\n      >\n        {task && task.description}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Task;\n","import {Button, TextField, Typography} from '@material-ui/core';\nimport React, {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useRouteMatch} from 'react-router';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport {addTask} from '../slices/listsSlice';\nimport {useHistory} from 'react-router-dom';\n\nconst CreateNewTask = () => {\n  const history = useHistory();\n  let { url } = useRouteMatch();\n  const [id] = url.match(/(?<=project\\/)([\\S]+?)(?=\\/)/);\n  const dispatch = useDispatch();\n  const [activeList] = useSelector((state) => {\n    return state.lists.lists.filter((elem) => {\n      return elem.id === Number(id);\n    });\n  });\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const handleChandeTitle = (event) => {\n    setTitle(event.target.value);\n  };\n  const handleChandeDescription = (event) => {\n    setDescription(event.target.value);\n  };\n  const handleClose = () => {\n    history.push(`${url.replace('/create-new-task', '')}`);\n  };\n  const handleSaveClick = () => {\n    dispatch(addTask({ title, description, listId: Number(id) }));\n    handleClose();\n  };\n  return (\n    <React.Fragment>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<SaveIcon />}\n        size=\"large\"\n        style={{ marginRight: 8 }}\n        onClick={handleSaveClick}\n        disabled={\n          title.trim().length < 4\n            ? title.trim().length < 4\n            : description.trim().length < 70\n        }\n      >\n        Save\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        startIcon={<CancelIcon />}\n        size=\"large\"\n        style={{ margin: 8 }}\n        onClick={() => handleClose()}\n      >\n        Cancel\n      </Button>\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        Create new task in {activeList && activeList.name} project\n      </Typography>\n      <form noValidate autoComplete=\"off\">\n        <TextField\n          helperText=\"Title length must be more than 3 characters\"\n          error={title.trim().length < 4}\n          id=\"task-title\"\n          label=\"Task title\"\n          style={{ marginBottom: 40, marginTop: 40 }}\n          required\n          fullWidth\n          margin=\"normal\"\n          variant=\"outlined\"\n          onChange={handleChandeTitle}\n        />\n        <TextField\n          helperText=\"Description length must be more than 70 characters\"\n          error={description.trim().length < 70}\n          id=\"task-description\"\n          label=\"Task description\"\n          style={{ marginBottom: 40 }}\n          required\n          fullWidth\n          margin=\"normal\"\n          multiline\n          rows={8}\n          variant=\"outlined\"\n          onChange={handleChandeDescription}\n        />\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default CreateNewTask;\n","import {Button, TextField, Typography} from '@material-ui/core';\nimport React, {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useRouteMatch} from 'react-router';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport {useHistory} from 'react-router-dom';\nimport {editTask} from '../slices/listsSlice';\n\nconst EditTask = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { url, params } = useRouteMatch();\n  const [listId] = url.match(/(?<=project\\/)([\\S]+?)(?=\\/)/);\n  const taskId = Number(params.id);\n  const activeList = useSelector((state) => {\n    return state.lists.lists.find((elem) => {\n      return elem.id === Number(listId);\n    });\n  });\n  let task;\n  if (activeList) {\n    task = activeList.tasks.find((task) => task.id === taskId);\n  }\n  const [title, setTitle] = useState(task.title);\n  const [description, setDescription] = useState(task.description);\n  const handleChandeTitle = (event) => {\n    setTitle(event.target.value);\n  };\n  const handleChandeDescription = (event) => {\n    setDescription(event.target.value);\n  };\n  const handleClose = () => {\n    history.push(`${url.replace('/edit', '')}`);\n  };\n  const handleSaveClick = () => {\n    dispatch(editTask({ title, description, id: taskId }));\n    handleClose();\n  };\n  return (\n    <React.Fragment>\n      <Button\n        variant=\"contained\"\n        size=\"large\"\n        color=\"primary\"\n        style={{ margin: 8 }}\n        startIcon={<SaveIcon />}\n        disabled={\n          title.trim().length < 4\n            ? title.trim().length < 4\n            : description.trim().length < 70\n        }\n        onClick={() => handleSaveClick()}\n      >\n        Save\n      </Button>\n      <Button\n        variant=\"contained\"\n        size=\"large\"\n        color=\"secondary\"\n        style={{ margin: 8 }}\n        startIcon={<CancelIcon />}\n        onClick={() => handleClose()}\n      >\n        Cancel\n      </Button>\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        Edit task {task && task.title}\n      </Typography>\n      <form noValidate autoComplete=\"off\">\n        <TextField\n          helperText=\"Title length must be more than 3 characters\"\n          error={title.trim().length < 4}\n          id=\"task-title\"\n          label=\"Task title\"\n          style={{ marginBottom: 40, marginTop: 40 }}\n          required\n          fullWidth\n          margin=\"normal\"\n          variant=\"outlined\"\n          defaultValue={task && task.title}\n          onChange={handleChandeTitle}\n        />\n        <TextField\n          helperText=\"Description length must be more than 70 characters\"\n          error={description.trim().length < 70}\n          id=\"task-description\"\n          label=\"Task description\"\n          style={{ marginBottom: 40 }}\n          required\n          fullWidth\n          margin=\"normal\"\n          multiline\n          rows={8}\n          variant=\"outlined\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          defaultValue={task && task.description}\n          onChange={handleChandeDescription}\n        />\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default EditTask;\n","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  activeList: {},\r\n};\r\n\r\nconst tasksSlice = createSlice({\r\n  name: 'tasks',\r\n  initialState,\r\n  reducers: {\r\n    tasksLoaded(state, action) {\r\n      state.activeList = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { tasksLoaded } = tasksSlice.actions;\r\n\r\nexport default tasksSlice.reducer;\r\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  IconButton,\n  Typography,\n} from '@material-ui/core';\nimport { Link as RouteLink } from 'react-router-dom';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddIcon from '@material-ui/icons/Add';\nimport { tasksLoaded } from '../slices/tasksSlice';\nimport {\n  createListOpen,\n  deleteListOpen,\n  editListOpen,\n  fetchLists,\n} from '../slices/listsSlice';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 220,\n    width: 200,\n    borderRadius: 20,\n  },\n  addCard: {\n    height: 220,\n    width: 200,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20,\n  },\n  addCardBtn: {\n    borderRadius: '50%',\n    height: 100,\n    width: 100,\n  },\n  messageBtn: {\n    marginLeft: 'auto',\n  },\n}));\n\nconst Projects = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.app.user);\n  const token = useSelector((state) => state.app.token);\n\n  useEffect(() => {\n    dispatch(fetchLists([token, user._id]));\n  }, []);\n  const lists = useSelector((state) => state.lists.lists);\n  const classes = useStyles();\n  return (\n    <Grid container spacing={2} justify=\"center\">\n      {lists &&\n        lists.length &&\n        lists.map((list) => (\n          <Grid\n            item\n            key={list.id}\n            onClick={() => {\n              dispatch(tasksLoaded(list));\n            }}\n          >\n            <Card className={classes.root} variant=\"outlined\">\n              <RouteLink key={list._id} to={`/project/${list._id}/tasks`}>\n                <CardContent>\n                  <Typography\n                    variant=\"h5\"\n                    gutterBottom\n                    align=\"center\"\n                    style={{ fontWeight: '500' }}\n                  >\n                    {list.name}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Tasks in this list:\n                  </Typography>\n                  <Typography variant=\"h6\" gutterBottom>\n                    {list.tasks && list.tasks.length}\n                  </Typography>\n\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Users doing this tasks: 0\n                  </Typography>\n                </CardContent>\n              </RouteLink>\n\n              <CardActions disableSpacing>\n                <IconButton\n                  size=\"medium\"\n                  aria-label=\"edit\"\n                  color=\"primary\"\n                  onClick={() => {\n                    dispatch(editListOpen(list, lists));\n                  }}\n                >\n                  <EditIcon />\n                </IconButton>\n                <IconButton\n                  size=\"medium\"\n                  aria-label=\"delete\"\n                  onClick={() => {\n                    dispatch(deleteListOpen(list));\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n                <IconButton\n                  size=\"medium\"\n                  aria-label=\"messages\"\n                  className={classes.messageBtn}\n                >\n                  <CommentIcon />\n                </IconButton>\n              </CardActions>\n            </Card>\n          </Grid>\n        ))}\n      <Grid item>\n        <Card\n          className={classes.addCard}\n          variant=\"outlined\"\n          onClick={() => dispatch(createListOpen())}\n        >\n          <IconButton size=\"medium\" color=\"primary\">\n            <AddIcon className={classes.addCardBtn} />\n          </IconButton>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Projects;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport { Card, CardContent, Grid, IconButton } from '@material-ui/core';\n\nimport { Link as RouteLink, useRouteMatch } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { fetchLists } from '../slices/listsSlice';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 150,\n    width: 200,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    borderRadius: 20,\n  },\n  addCard: {\n    height: 150,\n    width: 200,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20,\n  },\n  addCardBtn: {\n    borderRadius: '50%',\n    height: 100,\n    width: 100,\n  },\n}));\n\nconst Tasks = () => {\n  const dispatch = useDispatch();\n  const { _id } = useSelector((state) => state.app.user);\n  const classes = useStyles();\n  const { url, params } = useRouteMatch();\n  const { manager } = useSelector((state) => state.app.user);\n  const id = Number(params.id);\n  const history = useHistory();\n  const [activeList] = useSelector((state) => {\n    return state.lists.lists.filter((elem) => {\n      return elem.id === Number(id);\n    });\n  });\n  // useEffect(() => {\n  //   dispatch(fetchLists(id));\n  // }, []);\n  return (\n    <React.Fragment>\n      <Typography\n        variant=\"h4\"\n        align=\"center\"\n        style={{ marginTop: 40, marginBottom: 50 }}\n      >\n        {activeList && activeList.name}\n      </Typography>\n      {activeList && activeList.tasks && !activeList.tasks.length && (\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          There is no tasks in this list\n        </Typography>\n      )}\n      {activeList && activeList.tasks && (\n        <Grid container spacing={2} justify=\"center\">\n          {activeList.tasks.map((task) => {\n            return (\n              <Grid item key={task.id}>\n                <Card className={classes.root} variant=\"outlined\">\n                  <RouteLink key={task.id} to={`${url}/${task.id}`}>\n                    <CardContent>\n                      <Typography\n                        variant=\"h5\"\n                        align=\"center\"\n                        style={{ fontWeight: '500' }}\n                      >\n                        {task.title}\n                      </Typography>\n                    </CardContent>\n                  </RouteLink>\n                </Card>\n              </Grid>\n            );\n          })}\n          {manager && (\n            <Grid item>\n              <Card\n                className={classes.addCard}\n                variant=\"outlined\"\n                onClick={() => history.push(`${url}/create-new-task`)}\n              >\n                <IconButton size=\"medium\" color=\"primary\">\n                  <AddIcon className={classes.addCardBtn} />\n                </IconButton>\n              </Card>\n            </Grid>\n          )}\n        </Grid>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Tasks;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport SignInForm from '../../SignInForm';\nimport Students from '../../Students';\nimport SignUpForm from '../../SignUpForm';\nimport Task from '../../Task';\nimport CreateNewTask from '../../CreateNewTask';\nimport EditTask from '../../EditTask';\nimport Projects from '../../Projects';\nimport Tasks from '../../Tasks';\nimport { useSelector } from 'react-redux';\n\nconst SwitchRouter = () => {\n  const isLogin = useSelector((state) => state.app.isLogin);\n\n  return (\n    <Switch>\n      <Route exact path=\"/signUp\" component={SignUpForm} />\n      <Route exact path=\"/signIn\" component={SignInForm} />\n      {isLogin && (\n        <React.Fragment>\n          <Route exact path=\"/all_projects\" component={Projects} />\n          <Route exact path=\"/project/:id/tasks\" component={Tasks} />\n          <Route\n            exact\n            path=\"/project/:id/tasks/create-new-task\"\n            component={CreateNewTask}\n          />\n          <Route exact path=\"/project/:_id/tasks/:id\" component={Task} />\n          <Route\n            exact\n            path=\"/project/:id/tasks/:id/edit\"\n            component={EditTask}\n          />\n          <Route exact path=\"/students\" component={Students} />\n        </React.Fragment>\n      )}\n    </Switch>\n  );\n};\n\nexport default SwitchRouter;\n","import React, { useEffect } from 'react';\nimport { Box } from '@material-ui/core';\nimport clsx from 'clsx';\nimport CreateList from '../CreateList';\nimport EditListTitle from '../EditListTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DeleteListDialog from '../DeleteListDialog';\n\nimport { fetchLists } from '../../slices/listsSlice';\nimport LoadingSpinner from '../../elements/spinner/spinner';\n\nimport SwitchRouter from './Router/SwtchRouter';\nimport { localList } from '../../slices/listsSlice';\nimport { localLogin, loginLocalUser } from '../../slices/appSlice';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: 0,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 320,\n  },\n}));\n\nconst MainContent = () => {\n  const isLogin = useSelector((state) => state.app.isLogin);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const hasToken = () => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    console.log(user);\n    if (user && user.token) {\n      const { token } = user;\n      console.log(token);\n\n      return token;\n    }\n  };\n  const token = hasToken();\n  useEffect(() => {\n    if (!isLogin && token) {\n      dispatch(loginLocalUser(token));\n      history.push('/all_projects');\n    }\n  }, []);\n  const status = useSelector((state) => state.lists.status);\n  const loginStatus = useSelector((state) => state.app.status);\n  const isMenuOpen = useSelector((state) => state.app.isMenuOpen);\n  const classes = useStyles();\n  return (\n    <Box p={2} overflow=\"auto\" height=\"94vh\">\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: isMenuOpen,\n        })}\n      >\n        {(status === 'loading' || loginStatus === 'loading') && (\n          <LoadingSpinner />\n        )}\n        <div className={classes.drawerHeader} />\n        <SwitchRouter />\n        <CreateList />\n        <EditListTitle />\n        <DeleteListDialog />\n      </main>\n    </Box>\n  );\n};\n\nexport default MainContent;\n","import React from 'react';\nimport { Divider, Drawer, IconButton, List, ListItem } from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeMenu } from '../slices/appSlice';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n}));\nconst Sidebar = () => {\n  const isOpen = useSelector((state) => state.app.isMenuOpen);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const history = useHistory();\n  return (\n    <Drawer variant=\"persistent\" anchor=\"left\" open={isOpen}>\n      <div className={classes.drawerHeader}>\n        <IconButton color=\"primary\" onClick={() => dispatch(closeMenu())}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List component=\"nav\">\n        <ListItem\n          button\n          style={{ height: 50, width: 320 }}\n          onClick={() => {\n            history.push('/all_projects');\n            dispatch(closeMenu());\n          }}\n        >\n          All projects\n        </ListItem>\n        <ListItem\n          button\n          style={{ height: 50, width: 320 }}\n          onClick={() => {\n            history.push('/students');\n            dispatch(closeMenu());\n          }}\n        >\n          Your students\n        </ListItem>\n        <ListItem\n          button\n          style={{ height: 50, width: 320 }}\n          onClick={() => {\n            history.push(`/user-id`);\n            dispatch(closeMenu());\n          }}\n        >\n          Your account\n        </ListItem>\n      </List>\n    </Drawer>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logOut, openMenu } from '../slices/appSlice';\nimport { useHistory } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - 320px)`,\n    marginLeft: '320',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  hide: {\n    display: 'none',\n  },\n}));\n\nexport default function Header() {\n  const isMenuOpen = useSelector((state) => state.app.isMenuOpen);\n  const classes = useStyles();\n  const isLogin = useSelector((state) => state.app.isLogin);\n  const firstName = useSelector((state) => state.app.user.name.firstName);\n\n  const dispatch = useDispatch();\n  let history = useHistory();\n\n  function goToSignUp(e) {\n    e.preventDefault(e);\n    history.push('/signUp');\n  }\n\n  function goToSignIn(e) {\n    e.preventDefault(e);\n    history.push('/signIn');\n  }\n\n  function logOutHandler(e) {\n    e.preventDefault(e);\n    history.push('/');\n    dispatch(logOut());\n  }\n\n  let greetingText;\n\n  if (isLogin) {\n    greetingText = 'All Projects';\n  } else {\n    greetingText = 'Please Sign In';\n  }\n\n  return (\n    <div>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: isMenuOpen,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            disabled={!isLogin}\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            className={clsx(classes.menuButton, isMenuOpen && classes.hide)}\n            onClick={() => dispatch(openMenu())}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {greetingText}\n          </Typography>\n          {isLogin && (\n            <Box pr={5}>\n              <Typography variant=\"overline\" component=\"h2\" pr={3}>\n                {firstName}\n              </Typography>\n            </Box>\n          )}\n          {(!isLogin && (\n            <React.Fragment>\n              <Button onClick={goToSignUp} color=\"inherit\">\n                Sign Up\n              </Button>\n              <Button onClick={goToSignIn} color=\"inherit\">\n                Sign In\n              </Button>\n            </React.Fragment>\n          )) || (\n            <Button onClick={logOutHandler} color=\"inherit\">\n              Log Out\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { Container } from '@material-ui/core';\r\nimport React from 'react';\r\nimport MainContent from './components/MainContent/MainContent.jsx';\r\nimport Sidebar from './components/SideBar';\r\nimport Header from './components/Header';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Container maxWidth=\"xl\" className=\"todo\" style={{ height: '100vh' }}>\r\n        <MainContent />\r\n\r\n        <Header />\r\n        <Sidebar />\r\n      </Container>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {createSlice} from '@reduxjs/toolkit';\n\nconst initialState = {\n  isOpen: false,\n  isLogin: false,\n  email: '',\n  password: '',\n  id: '',\n};\n\nconst headerSlice = createSlice({\n  name: 'header',\n  initialState,\n  reducers: {\n    openLogin(state, action) {\n      state.isOpen = true;\n    },\n    closeLogin(state, action) {\n      state.isOpen = false;\n    },\n  },\n});\n\nexport const { openLogin, closeLogin } = headerSlice.actions;\n\nexport default headerSlice.reducer;\n","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  email: '',\r\n  password: '',\r\n  firstName: '',\r\n  lastName: '',\r\n  id: '',\r\n};\r\n\r\nexport const signUp = createAsyncThunk('user/signUp', async (value) => {\r\n  const response = await fetch('http://localhost:3005/lists', {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      name: value,\r\n      tasks: [],\r\n    }),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  const list = await response.json();\r\n  return list;\r\n});\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    openLogin(state, action) {\r\n      state.isOpen = true;\r\n    },\r\n    closeLogin(state, action) {\r\n      state.isOpen = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { openLogin, closeLogin } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport taskReducer from '../slices/tasksSlice';\r\nimport listsReducer from '../slices/listsSlice';\r\nimport appReducer from '../slices/appSlice';\r\nimport headerReducer from '../slices/headerSlice';\r\nimport userReducer from '../slices/userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    tasks: taskReducer,\r\n    lists: listsReducer,\r\n    app: appReducer,\r\n    header: headerReducer,\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './slices/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}